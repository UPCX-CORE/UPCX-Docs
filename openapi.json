{
    "openapi": "3.0.0",
    "info": {
        "title": "Chain API",
        "description": "OAS 3.0 Nodupcx Chain API Specification\r",
        "version": "1.0.0",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "contact": {
            "url": "https://upcx.io"
        }
    },
    "servers": [
        {
            "url": "{protocol}://{host}:{port}/v1/chain",
            "variables": {
                "protocol": {
                    "enum": [
                        "http",
                        "https"
                    ],
                    "default": "http"
                },
                "host": {
                    "default": "localhost"
                },
                "port": {
                    "default": "8080"
                }
            }
        }
    ],
    "tags": [
        {
            "name": "Chain APIs"
        },
        {
            "name": "Producer APIs"
        },
        {
            "name": "Net APIs"
        }
    ],
    "components": {
        "schemas": {}
    },
    "paths": {
        "/get_account": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Returns an object containing various details about a specific account on the blockchain.",
                "operationId": "get_account",
                "requestBody": {
                    "description": "JSON Object with single member \"account_name\"",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "account_name"
                                ],
                                "properties": {
                                    "account_name": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Account.yaml"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_block": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Returns an object containing various details about a specific block on the blockchain.",
                "operationId": "get_block",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "block_num_or_id"
                                ],
                                "properties": {
                                    "block_num_or_id": {
                                        "type": "string",
                                        "description": "Provide a `block number` or a `block id`"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Block.yaml"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_block_info": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Similar to `get_block` but returns a fixed-size smaller subset of the block data.",
                "operationId": "get_block_info",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "block_num"
                                ],
                                "properties": {
                                    "block_num": {
                                        "type": "integer",
                                        "description": "Provide a `block number`"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/BlockInfo.yaml"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_info": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Returns an object containing various details about the blockchain.",
                "operationId": "get_info",
                "security": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Info.yaml"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/push_transaction": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "This method expects a transaction in JSON format and will attempt to apply it to the blockchain.",
                "operationId": "push_transaction",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "signatures": {
                                        "type": "array",
                                        "description": "array of signatures required to authorize transaction",
                                        "items": {
                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Signature.yaml"
                                        }
                                    },
                                    "compression": {
                                        "type": "boolean",
                                        "description": "Compression used, usually false"
                                    },
                                    "packed_context_free_data": {
                                        "type": "string",
                                        "description": "json to hex"
                                    },
                                    "packed_trx": {
                                        "type": "string",
                                        "description": "Transaction object json to hex"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Returns Nothing"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/send_transaction": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "This method expects a transaction in JSON format and will attempt to apply it to the blockchain.",
                "operationId": "send_transaction",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "signatures": {
                                        "type": "array",
                                        "description": "array of signatures required to authorize transaction",
                                        "items": {
                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Signature.yaml"
                                        }
                                    },
                                    "compression": {
                                        "type": "boolean",
                                        "description": "Compression used, usually false"
                                    },
                                    "packed_context_free_data": {
                                        "type": "string",
                                        "description": "json to hex"
                                    },
                                    "packed_trx": {
                                        "type": "string",
                                        "description": "Transaction object json to hex"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Returns Nothing"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/push_transactions": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "This method expects a transaction in JSON format and will attempt to apply it to the blockchain.",
                "operationId": "push_transactions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Transaction.yaml"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Returns Nothing"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_block_header_state": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Retrieves the glock header state",
                "operationId": "get_block_header_state",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "block_num_or_id"
                                ],
                                "properties": {
                                    "block_num_or_id": {
                                        "type": "string",
                                        "description": "Provide a block_number or a block_id"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/BlockHeaderState.yaml"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_abi": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Retrieves the ABI for a contract based on its account name",
                "operationId": "get_abi",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "account_name"
                                ],
                                "properties": {
                                    "account_name": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Abi.yaml"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_currency_balance": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Retrieves the current balance",
                "operationId": "get_currency_balance",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "code",
                                    "account",
                                    "symbol"
                                ],
                                "properties": {
                                    "code": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                    },
                                    "account": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                    },
                                    "symbol": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Symbol.yaml"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Symbol.yaml"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_currency_stats": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Retrieves currency stats",
                "operationId": "get_currency_stats",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                    },
                                    "symbol": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Symbol.yaml"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Returns an object with one member labeled as the symbol you requested, the object has three members: supply (Symbol), max_supply (Symbol) and issuer (Name)"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_required_keys": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Returns the required keys needed to sign a transaction.",
                "operationId": "get_required_keys",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "transaction",
                                    "available_keys"
                                ],
                                "properties": {
                                    "transaction": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Transaction.yaml"
                                    },
                                    "available_keys": {
                                        "type": "array",
                                        "description": "Provide the available keys",
                                        "items": {
                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/PublicKey.yaml"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/get_producers": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Retrieves producers list",
                "operationId": "get_producers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "GetProducersRequest",
                                "type": "object",
                                "required": [
                                    "limit",
                                    "lower_bound"
                                ],
                                "properties": {
                                    "limit": {
                                        "type": "string",
                                        "description": "total number of producers to retrieve"
                                    },
                                    "lower_bound": {
                                        "type": "string",
                                        "description": "In conjunction with limit can be used to paginate through the results. For example, limit=10 and lower_bound=10 would be page 2"
                                    },
                                    "json": {
                                        "type": "boolean",
                                        "description": "return result in JSON format"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "GetProducersResponse",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "minProperties": 3,
                                    "required": [
                                        "active",
                                        "pending",
                                        "proposed"
                                    ],
                                    "properties": {
                                        "active": {
                                            "type": "array",
                                            "nullable": true,
                                            "items": {
                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/ProducerSchedule.yaml"
                                            }
                                        },
                                        "pending": {
                                            "type": "array",
                                            "nullable": true,
                                            "items": {
                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/ProducerSchedule.yaml"
                                            }
                                        },
                                        "proposed": {
                                            "type": "array",
                                            "nullable": true,
                                            "items": {
                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/ProducerSchedule.yaml"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_raw_code_and_abi": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Retrieves raw code and ABI for a contract based on account name",
                "operationId": "get_raw_code_and_abi",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "account_name"
                                ],
                                "properties": {
                                    "account_name": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "account_name": {
                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                        },
                                        "wasm": {
                                            "type": "string",
                                            "description": "base64 encoded wasm"
                                        },
                                        "abi": {
                                            "type": "string",
                                            "description": "base64 encoded ABI"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_scheduled_transaction": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Retrieves the scheduled transaction",
                "operationId": "get_scheduled_transaction",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "lower_bound": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/DateTimeSeconds.yaml"
                                    },
                                    "limit": {
                                        "description": "The maximum number of transactions to return",
                                        "type": "integer"
                                    },
                                    "json": {
                                        "description": "true/false whether the packed transaction is converted to json",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Transaction.yaml"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_table_by_scope": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Retrieves table scope",
                "operationId": "get_table_by_scope",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "description": "`name` of the contract to return table data for"
                                    },
                                    "table": {
                                        "type": "string",
                                        "description": "Filter results by table"
                                    },
                                    "lower_bound": {
                                        "type": "string",
                                        "description": "Filters results to return the first element that is not less than provided value in set"
                                    },
                                    "upper_bound": {
                                        "type": "string",
                                        "description": "Filters results to return the first element that is greater than provided value in set"
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "description": "Limit number of results returned.",
                                        "format": "int32",
                                        "default": 10
                                    },
                                    "reverse": {
                                        "type": "boolean",
                                        "description": "Reverse the order of returned results",
                                        "default": false
                                    },
                                    "show_payer": {
                                        "type": "boolean",
                                        "description": "Show RAM payer",
                                        "default": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "rows": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/TableScope.yaml"
                                            }
                                        },
                                        "more": {
                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_table_rows": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Returns an object containing rows from the specified table.",
                "operationId": "get_table_rows",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "code",
                                    "table",
                                    "scope"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "description": "The name of the smart contract that controls the provided table"
                                    },
                                    "table": {
                                        "type": "string",
                                        "description": "The name of the table to query"
                                    },
                                    "scope": {
                                        "type": "string",
                                        "description": "The account to which this data belongs"
                                    },
                                    "index_position": {
                                        "type": "string",
                                        "description": "Position of the index used, accepted parameters `primary`, `secondary`, `tertiary`, `fourth`, `fifth`, `sixth`, `seventh`, `eighth`, `ninth` , `tenth`"
                                    },
                                    "key_type": {
                                        "type": "string",
                                        "description": "Type of key specified by index_position (for example - `uint64_t` or `name`)"
                                    },
                                    "encode_type": {
                                        "type": "string"
                                    },
                                    "lower_bound": {
                                        "type": "string",
                                        "description": "Filters results to return the first element that is not less than provided value in set"
                                    },
                                    "upper_bound": {
                                        "type": "string",
                                        "description": "Filters results to return the first element that is greater than provided value in set"
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "description": "Limit number of results returned.",
                                        "format": "int32",
                                        "default": 10
                                    },
                                    "reverse": {
                                        "type": "boolean",
                                        "description": "Reverse the order of returned results",
                                        "default": false
                                    },
                                    "show_payer": {
                                        "type": "boolean",
                                        "description": "Show RAM payer",
                                        "default": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "rows": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_kv_table_rows": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Returns an object containing rows from the specified kv table.",
                "operationId": "get_kv_table_rows",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "code",
                                    "table",
                                    "index_name"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "description": "The name of the smart contract that controls the provided kv table"
                                    },
                                    "table": {
                                        "type": "string",
                                        "description": "The name of the kv table to query"
                                    },
                                    "index_name": {
                                        "type": "string",
                                        "description": "The name of primary or secondary index"
                                    },
                                    "encode_type": {
                                        "type": "string ( 'bytes' for arbitray binary index value )",
                                        "description": "Type of key specified by index_position (for example - `uint64_t` or `name`)"
                                    },
                                    "index_value": {
                                        "type": "string",
                                        "description": "index value used for point query encoded as 'encode_type'"
                                    },
                                    "lower_bound": {
                                        "type": "string",
                                        "description": "lower bound index value for ranged query. Query result includes rows specified with lower_bound"
                                    },
                                    "upper_bound": {
                                        "type": "string",
                                        "description": "upper bound index value for ranged query. Query result doesn't include rows specified with upper_bound"
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "description": "Limit number of results returned.",
                                        "format": "int32"
                                    },
                                    "reverse": {
                                        "type": "boolean",
                                        "description": "Reverse the order of returned results"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "rows": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/abi_json_to_bin": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Returns an object containing the serialized action data.",
                "operationId": "abi_json_to_bin",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "AbiJsonToBinRequest - code - action - args",
                                "properties": {
                                    "code": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                    },
                                    "action": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                    },
                                    "args": {
                                        "type": "object",
                                        "description": "json object of the action parameters that will be serialized."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "binargs": {
                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Hex.yaml"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/abi_bin_to_json": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Returns an object containing the deserialized action data.",
                "operationId": "abi_bin_to_json",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "AbiBinToJsonRequest",
                                "required": [
                                    "code",
                                    "action",
                                    "binargs"
                                ],
                                "properties": {
                                    "code": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                    },
                                    "action": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                    },
                                    "binargs": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Hex.yaml"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_code": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Returns an object containing the smart contract WASM code.",
                "operationId": "get_code",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "account_name",
                                    "code_as_wasm"
                                ],
                                "properties": {
                                    "account_name": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                    },
                                    "code_as_wasm": {
                                        "type": "integer",
                                        "default": 1,
                                        "description": "This must be 1 (true)"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "GetCodeResponse.yaml",
                                    "properties": {
                                        "name": {
                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                        },
                                        "code_hash": {
                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                        },
                                        "wast": {
                                            "type": "string"
                                        },
                                        "wasm": {
                                            "type": "string"
                                        },
                                        "abi": {
                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Abi.yaml"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_raw_abi": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Returns an object containing the smart contract abi.",
                "operationId": "get_raw_abi",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "account_name"
                                ],
                                "properties": {
                                    "account_name": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "account_name": {
                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                        },
                                        "code_hash": {
                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                        },
                                        "abi_hash": {
                                            "allOf": [
                                                {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                                }
                                            ]
                                        },
                                        "abi": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_activated_protocol_features": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Retreives the activated protocol features for producer node",
                "operationId": "get_activated_protocol_features",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "params"
                                ],
                                "properties": {
                                    "params": {
                                        "type": "object",
                                        "description": "Defines the filters to retreive the protocol features by",
                                        "required": [
                                            "search_by_block_num",
                                            "reverse"
                                        ],
                                        "properties": {
                                            "lower_bound": {
                                                "type": "integer",
                                                "description": "Lower bound"
                                            },
                                            "upper_bound": {
                                                "type": "integer",
                                                "description": "Upper bound"
                                            },
                                            "limit": {
                                                "type": "integer",
                                                "description": "The limit, default is 10"
                                            },
                                            "search_by_block_num": {
                                                "type": "boolean",
                                                "description": "Flag to indicate it is has to search by block number"
                                            },
                                            "reverse": {
                                                "type": "boolean",
                                                "description": "Flag to indicate it has to search in reverse"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Returns activated protocol features",
                                    "required": [
                                        "activated_protocol_features"
                                    ],
                                    "properties": {
                                        "activated_protocol_features": {
                                            "type": "array",
                                            "description": "Variant type, an array of strings with the activated protocol features",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "more": {
                                            "type": "integer",
                                            "description": "In case there's more activated protocol features than the input parameter `limit` requested, returns the ordinal of the next activated protocol feature which was not returned, otherwise zero."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get_accounts_by_authorizers": {
            "post": {
                "tags": [
                    "Chain APIs"
                ],
                "description": "Given a set of account names and public keys, find all account permission authorities that are, in part or whole, satisfiable",
                "operationId": "get_accounts_by_authorizers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "accounts": {
                                        "type": "array",
                                        "description": "List of authorizing accounts and/or actor/permissions",
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                                },
                                                {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Authority.yaml"
                                                }
                                            ]
                                        }
                                    },
                                    "keys": {
                                        "type": "array",
                                        "description": "List of authorizing keys",
                                        "items": {
                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/PublicKey.yaml"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Result containing a list of accounts which are authorized, in whole or part, by the provided accounts and keys",
                                    "required": [
                                        "accounts"
                                    ],
                                    "properties": {
                                        "accounts": {
                                            "type": "array",
                                            "description": "An array of each account,permission,authorizing-data triplet in the response",
                                            "items": {
                                                "type": "object",
                                                "description": "the information for a single account,permission,authorizing-data triplet",
                                                "required": [
                                                    "account_name",
                                                    "permission_name",
                                                    "authorizer",
                                                    "weight",
                                                    "threshold"
                                                ],
                                                "properties": {
                                                    "account_name": {
                                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                                    },
                                                    "permission_name": {
                                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                                    },
                                                    "authorizer": {
                                                        "oneOf": [
                                                            {
                                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/PublicKey.yaml"
                                                            },
                                                            {
                                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Authority.yaml"
                                                            }
                                                        ]
                                                    },
                                                    "weight": {
                                                        "type": "integer",
                                                        "description": "the weight that this authorizer adds to satisfy the permission"
                                                    },
                                                    "threshold": {
                                                        "type": "integer",
                                                        "description": "the sum of weights that must be met or exceeded to satisfy the permission"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/net/connections": {
            "post": {
                "tags": [
                    "Net APIs"
                ],
                "summary": "connections",
                "description": "Returns an array of all peer connection statuses.",
                "operationId": "connections",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "peer": {
                                                "description": "The IP address or URL of the peer",
                                                "type": "string"
                                            },
                                            "connecting": {
                                                "description": "True if the peer is connecting, otherwise false",
                                                "type": "boolean"
                                            },
                                            "syncing": {
                                                "description": "True if the peer is syncing, otherwise false",
                                                "type": "boolean"
                                            },
                                            "last_handshake": {
                                                "description": "Structure holding detailed information about the connection",
                                                "type": "object",
                                                "properties": {
                                                    "network_version": {
                                                        "description": "Incremental value above a computed base",
                                                        "type": "integer"
                                                    },
                                                    "chain_id": {
                                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                                    },
                                                    "node_id": {
                                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                                    },
                                                    "key": {
                                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/PublicKey.yaml"
                                                    },
                                                    "time": {
                                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/DateTimeSeconds.yaml"
                                                    },
                                                    "token": {
                                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                                    },
                                                    "sig": {
                                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Signature.yaml"
                                                    },
                                                    "p2p_address": {
                                                        "description": "IP address or URL of the peer",
                                                        "type": "string"
                                                    },
                                                    "last_irreversible_block_num": {
                                                        "description": "Last irreversible block number",
                                                        "type": "integer"
                                                    },
                                                    "last_irreversible_block_id": {
                                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                                    },
                                                    "head_num": {
                                                        "description": "Head number",
                                                        "type": "integer"
                                                    },
                                                    "head_id": {
                                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                                    },
                                                    "os": {
                                                        "description": "Operating system name",
                                                        "type": "string"
                                                    },
                                                    "agent": {
                                                        "description": "Agent name",
                                                        "type": "string"
                                                    },
                                                    "generation": {
                                                        "description": "Generation number",
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/net/connect": {
            "post": {
                "tags": [
                    "Net APIs"
                ],
                "summary": "connect",
                "description": "Initiate a connection to a specified peer.",
                "operationId": "connect",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "endpoint"
                                ],
                                "properties": {
                                    "endpoint": {
                                        "type": "string",
                                        "description": "the endpoint to connect to expressed as either IP address or URL"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "description": "\"already connected\" or \"added connection\""
                                }
                            }
                        }
                    }
                }
            }
        },
        "/net/disconnect": {
            "post": {
                "tags": [
                    "Net APIs"
                ],
                "summary": "disconnect",
                "description": "Initiate disconnection from a specified peer.",
                "operationId": "disconnect",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "endpoint"
                                ],
                                "properties": {
                                    "endpoint": {
                                        "type": "string",
                                        "description": "the endpoint to disconnect from, expressed as either IP address or URL"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "description": "\"connection removed\" or \"no known connection for host\""
                                }
                            }
                        }
                    }
                }
            }
        },
        "/net/status": {
            "post": {
                "tags": [
                    "Net APIs"
                ],
                "summary": "status",
                "description": "Retrieves the connection status for a specified peer.",
                "operationId": "status",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "endpoint"
                                ],
                                "properties": {
                                    "endpoint": {
                                        "type": "string",
                                        "description": "the endpoint to get the status for, to expressed as either IP address or URL"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "peer": {
                                            "description": "The IP address or URL of the peer",
                                            "type": "string"
                                        },
                                        "connecting": {
                                            "description": "True if the peer is connecting, otherwise false",
                                            "type": "boolean"
                                        },
                                        "syncing": {
                                            "description": "True if the peer is syncing, otherwise false",
                                            "type": "boolean"
                                        },
                                        "last_handshake": {
                                            "description": "Structure holding detailed information about the connection",
                                            "type": "object",
                                            "properties": {
                                                "network_version": {
                                                    "description": "Incremental value above a computed base",
                                                    "type": "integer"
                                                },
                                                "chain_id": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                                },
                                                "node_id": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                                },
                                                "key": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/PublicKey.yaml"
                                                },
                                                "time": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/DateTimeSeconds.yaml"
                                                },
                                                "token": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                                },
                                                "sig": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Signature.yaml"
                                                },
                                                "p2p_address": {
                                                    "description": "IP address or URL of the peer",
                                                    "type": "string"
                                                },
                                                "last_irreversible_block_num": {
                                                    "description": "Last irreversible block number",
                                                    "type": "integer"
                                                },
                                                "last_irreversible_block_id": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                                },
                                                "head_num": {
                                                    "description": "Head number",
                                                    "type": "integer"
                                                },
                                                "head_id": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                                },
                                                "os": {
                                                    "description": "Operating system name",
                                                    "type": "string"
                                                },
                                                "agent": {
                                                    "description": "Agent name",
                                                    "type": "string"
                                                },
                                                "generation": {
                                                    "description": "Generation number",
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/producer/pause": {
            "post": {
                "tags": [
                    "Producer APIs"
                ],
                "summary": "pause",
                "description": "Pause producer node",
                "operationId": "pause",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "description": "returns status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/producer/resume": {
            "post": {
                "tags": [
                    "Producer APIs"
                ],
                "summary": "resume",
                "description": "Resume producer node",
                "operationId": "resume",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "description": "Resumes activity for producer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Returns Nothing"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/producer/paused": {
            "post": {
                "tags": [
                    "Producer APIs"
                ],
                "summary": "paused",
                "description": "Retreives paused status for producer node",
                "operationId": "paused",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "description": "True if producer is paused, false otherwise"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/producer/get_runtime_options": {
            "post": {
                "tags": [
                    "Producer APIs"
                ],
                "summary": "get_runtime_options",
                "description": "Retreives run time options for producer node",
                "operationId": "get_runtime_options",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Returns run time options set for the producer",
                                    "properties": {
                                        "max_transaction_time": {
                                            "type": "integer",
                                            "description": "Max transaction time"
                                        },
                                        "max_irreversible_block_age": {
                                            "type": "integer",
                                            "description": "Max irreversible block age"
                                        },
                                        "produce_time_offset_us": {
                                            "type": "integer",
                                            "description": "Time offset"
                                        },
                                        "last_block_time_offset_us": {
                                            "type": "integer",
                                            "description": "Last block time offset"
                                        },
                                        "max_scheduled_transaction_time_per_block_ms": {
                                            "type": "integer",
                                            "description": "Max scheduled transaction time per block in ms"
                                        },
                                        "subjective_cpu_leeway_us": {
                                            "type": "integer",
                                            "description": "Subjective CPU leeway"
                                        },
                                        "incoming_defer_ratio": {
                                            "type": "integer",
                                            "description": "Incoming defer ration"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/producer/update_runtime_options": {
            "post": {
                "tags": [
                    "Producer APIs"
                ],
                "summary": "update_runtime_options",
                "description": "Update run time options for producer node",
                "operationId": "update_runtime_options",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "options"
                                ],
                                "properties": {
                                    "options": {
                                        "type": "object",
                                        "description": "Defines the run time options to set for the producer",
                                        "properties": {
                                            "max_transaction_time": {
                                                "type": "integer",
                                                "description": "Max transaction time"
                                            },
                                            "max_irreversible_block_age": {
                                                "type": "integer",
                                                "description": "Max irreversible block age"
                                            },
                                            "produce_time_offset_us": {
                                                "type": "integer",
                                                "description": "Time offset"
                                            },
                                            "last_block_time_offset_us": {
                                                "type": "integer",
                                                "description": "Last block time offset"
                                            },
                                            "max_scheduled_transaction_time_per_block_ms": {
                                                "type": "integer",
                                                "description": "Max scheduled transaction time per block in ms"
                                            },
                                            "subjective_cpu_leeway_us": {
                                                "type": "integer",
                                                "description": "Subjective CPU leeway"
                                            },
                                            "incoming_defer_ratio": {
                                                "type": "integer",
                                                "description": "Incoming defer ration"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Returns Nothing"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/producer/get_greylist": {
            "post": {
                "tags": [
                    "Producer APIs"
                ],
                "summary": "get_greylist",
                "description": "Retreives the greylist for producer node",
                "operationId": "get_greylist",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "List of account names stored in the greylist",
                                    "items": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/producer/add_greylist_accounts": {
            "post": {
                "tags": [
                    "Producer APIs"
                ],
                "summary": "add_greylist_accounts",
                "description": "Adds accounts to grey list for producer node",
                "operationId": "add_greylist_accounts",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "params"
                                ],
                                "properties": {
                                    "params": {
                                        "type": "object",
                                        "properties": {
                                            "accounts": {
                                                "type": "array",
                                                "description": "List of account names to add",
                                                "items": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Returns Nothing"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/producer/remove_greylist_accounts": {
            "post": {
                "tags": [
                    "Producer APIs"
                ],
                "summary": "remove_greylist_accounts",
                "description": "Removes accounts from greylist for producer node",
                "operationId": "remove_greylist_accounts",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "params"
                                ],
                                "properties": {
                                    "params": {
                                        "type": "object",
                                        "properties": {
                                            "accounts": {
                                                "type": "array",
                                                "description": "List of account names to remove",
                                                "items": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "List of account names stored in the greylist",
                                    "items": {
                                        "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/producer/get_whitelist_blacklist": {
            "post": {
                "tags": [
                    "Producer APIs"
                ],
                "summary": "get_whitelist_blacklist",
                "description": "Retreives the white list and black list for producer node",
                "operationId": "get_whitelist_blacklist",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Defines the actor whitelist and blacklist, the contract whitelist and blacklist, the action blacklist and key blacklist",
                                    "properties": {
                                        "actor_whitelist": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                            }
                                        },
                                        "actor_blacklist": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                            }
                                        },
                                        "contract_whitelist": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                            }
                                        },
                                        "contract_blacklist": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                            }
                                        },
                                        "action_blacklist": {
                                            "type": "array",
                                            "items": {
                                                "type": "array",
                                                "description": "Array of two string values, the account name as the first and action name as the second",
                                                "items": {
                                                    "allOf": [
                                                        {
                                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                                        },
                                                        {
                                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/CppSignature.yaml"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "key_blacklist": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/KeyType.yaml"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/producer/set_whitelist_blacklist": {
            "post": {
                "tags": [
                    "Producer APIs"
                ],
                "summary": "set_whitelist_blacklist",
                "description": "Sets the white list and black list for producer node",
                "operationId": "set_whitelist_blacklist",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "params"
                                ],
                                "properties": {
                                    "params": {
                                        "type": "object",
                                        "description": "Defines the actor whitelist and blacklist, the contract whitelist and blacklist, the action blacklist and key blacklist",
                                        "properties": {
                                            "actor_whitelist": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                                }
                                            },
                                            "actor_blacklist": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                                }
                                            },
                                            "contract_whitelist": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                                }
                                            },
                                            "contract_blacklist": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                                }
                                            },
                                            "action_blacklist": {
                                                "type": "array",
                                                "items": {
                                                    "type": "array",
                                                    "description": "Array of two string values, the account name as the first and action name as the second",
                                                    "items": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Name.yaml"
                                                            },
                                                            {
                                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/CppSignature.yaml"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "key_blacklist": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/KeyType.yaml"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Returns Nothing"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/producer/create_snapshot": {
            "post": {
                "tags": [
                    "Producer APIs"
                ],
                "summary": "create_snapshot",
                "description": "Creates a snapshot for producer node",
                "operationId": "create_snapshot",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "next"
                                ],
                                "properties": {
                                    "next": {
                                        "type": "object",
                                        "description": "Defines the snapshot to be created",
                                        "properties": {
                                            "head_block_id": {
                                                "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                            },
                                            "head_block_num": {
                                                "type": "integer",
                                                "description": "Highest block number on the chain"
                                            },
                                            "head_block_time": {
                                                "type": "string",
                                                "description": "Highest block unix timestamp"
                                            },
                                            "version": {
                                                "type": "integer",
                                                "description": "Version number"
                                            },
                                            "snapshot_name": {
                                                "type": "string",
                                                "description": "The name of the snapshot"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Returns Nothing"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/producer/get_integrity_hash": {
            "post": {
                "tags": [
                    "Producer APIs"
                ],
                "summary": "get_integrity_hash",
                "description": "Retreives the integrity hash for producer node",
                "operationId": "get_integrity_hash",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Defines the integrity hash information details",
                                    "properties": {
                                        "integrity_hash": {
                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                        },
                                        "head_block_id": {
                                            "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/producer/schedule_protocol_feature_activations": {
            "post": {
                "tags": [
                    "Producer APIs"
                ],
                "summary": "schedule_protocol_feature_activations",
                "description": "Schedule protocol feature activation for producer node",
                "operationId": "schedule_protocol_feature_activations",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "schedule"
                                ],
                                "properties": {
                                    "schedule": {
                                        "type": "object",
                                        "properties": {
                                            "protocol_features_to_activate": {
                                                "type": "array",
                                                "description": "List of protocol features to activate",
                                                "items": {
                                                    "$ref": "https://raw.githubusercontent.com/UPCX-CORE/UPCX-Schemata/refs/heads/main/Sha256.yaml"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Returns Nothing"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/producer/get_supported_protocol_features": {
            "post": {
                "tags": [
                    "Producer APIs"
                ],
                "summary": "get_supported_protocol_features",
                "description": "Retreives supported protocol features for producer node",
                "operationId": "get_supported_protocol_features",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "params"
                                ],
                                "properties": {
                                    "params": {
                                        "type": "object",
                                        "description": "Defines filters based on which to return the supported protocol features",
                                        "properties": {
                                            "exclude_disabled": {
                                                "type": "boolean",
                                                "description": "Exclude disabled protocol features"
                                            },
                                            "exclude_unactivatable": {
                                                "type": "boolean",
                                                "description": "Exclude unactivatable protocol features"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "Variant type, an array of strings with the supported protocol features",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
name: Sync Markdown to AWS Lambda

on:
  push:
    branches:
      - main
    paths:
      - '**/*.md'

jobs:
  sync-markdown:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for git diff to work properly

      # 2. Prepare JSON payload of changed Markdown files
      - name: Prepare Markdown payload
        id: payload
        run: |
          # Get changed Markdown files between commits
          files=$(git diff ${{ github.event.before }} ${{ github.sha }} --name-only | grep '\.md$' || true)

          # Convert to compact JSON array
          files_json=$(printf '%s\n' "$files" | jq -R . | jq -s -c .)

          # Ensure valid JSON even if empty
          files_json=${files_json:-"[]"}

          # Build payload as compact JSON
          payload=$(jq -n --argjson files "$files_json" '{files: $files}' | jq -c .)

          # Save payload to file WITHOUT newline (critical)
          printf '%s' "$payload" > payload.json

          # Set GitHub Actions outputs
          echo "files=$files_json" >> $GITHUB_OUTPUT
          echo "payload=$payload" >> $GITHUB_OUTPUT

      # 3. Skip Lambda if no Markdown files changed
      - name: Skip Lambda if no Markdown files changed
        if: ${{ steps.payload.outputs.files == '[]' }}
        run: |
          echo "No Markdown files changed. Skipping Lambda."
          exit 0

      # 4. Invoke AWS Lambda
      - name: Invoke Lambda per file
        run: |
          files=(${{ steps.payload.outputs.files }}) # array of filenames
          for f in "${files[@]}"; do
            echo "{\"files\":[\"$f\"]}" > payload.json
            aws lambda invoke \
              --function-name "$AWS_LAMBDA_FUNCTION_NAME" \
              --region "$AWS_REGION" \
              --cli-binary-format raw-in-base64-out \
              --payload file://payload.json \
              response.json
            cat response.json
          done
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_LAMBDA_FUNCTION_NAME: ${{ secrets.AWS_LAMBDA_FUNCTION_NAME }}